# =============================================================================
# LA MÁQUINA DE NOTICIAS - CONFIGURACIÓN GLOBAL
# =============================================================================
# Este archivo contiene las variables de entorno consolidadas para todo el proyecto.
# INSTRUCCIONES:
# 1. Copiar como .env: cp .env.example .env
# 2. Configurar variables REQUERIDAS con valores reales
# 3. Los módulos individuales heredarán estas configuraciones globales
# 4. Variables específicas por módulo se mantienen en cada módulo

# =============================================================================
# CONFIGURACIÓN SUPABASE (REQUERIDA GLOBALMENTE)
# =============================================================================
# Información del proyecto Supabase
PROJECT_NAME=""
PROJECT_ID=""
PROJECT_URL=""
SUPABASE_URL=""                    # https://tu-proyecto.supabase.co
SUPABASE_ANON_KEY=""              # Clave anónima para cliente
SUPABASE_SERVICE_ROLE_KEY=""      # Clave de servicio para operaciones administrativas
SUPABASE_DB_PASSWORD=""           # Password de la base de datos

# Conexión PostgreSQL directa (para migraciones y scripts)
PGHOST=""                         # db.tu-proyecto.supabase.co
PGPORT=""                         # 5432
PGDATABASE=""                     # postgres
PGUSER=""                         # postgres
PGPASSWORD=""                     # Mismo que SUPABASE_DB_PASSWORD

# =============================================================================
# APIs DE INTELIGENCIA ARTIFICIAL (LLMs)
# =============================================================================
# Groq API (REQUERIDA para module_pipeline)
GROQ_API_KEY=""

# APIs opcionales para funcionalidades avanzadas
ANTHROPIC_API_KEY=""              # Para TaskMaster o funciones avanzadas
OPENAI_API_KEY=""                 # OpenAI (opcional)
PERPLEXITY_API_KEY=""             # Para research (opcional)
GOOGLE_API_KEY=""                 # Google AI (opcional)
MISTRAL_API_KEY=""                # Mistral AI (opcional)
XAI_API_KEY=""                    # xAI (opcional)
AZURE_OPENAI_API_KEY=""           # Azure OpenAI (opcional)
OLLAMA_API_KEY=""                 # Ollama local (opcional)

# =============================================================================
# CONFIGURACIÓN GLOBAL DE SISTEMA
# =============================================================================
# Logging global (aplicado por todos los módulos)
LOG_LEVEL="INFO"                  # DEBUG, INFO, WARNING, ERROR

# Configuración de desarrollo/producción
ENVIRONMENT="development"         # development, staging, production
DEBUG_MODE="false"               # Solo para development

# =============================================================================
# COMUNICACIÓN ENTRE SERVICIOS (Docker)
# =============================================================================
# URLs para comunicación inter-módulos en Docker
PIPELINE_API_URL="http://module_pipeline:8003"
DASHBOARD_API_URL="http://module_dashboard_review_backend:8004"
FRONTEND_URL="http://module_dashboard_review_frontend:80"

# =============================================================================
# CONFIGURACIÓN ESPECÍFICA POR MÓDULO
# =============================================================================

# --- MODULE_SCRAPER ---
# URLs objetivo para scraping
SCRAPER_TARGET_URLS=""
# Configuración Playwright (para module_scraper)
PLAYWRIGHT_MAX_RETRIES="2"
PLAYWRIGHT_TIMEOUT="30000"
PLAYWRIGHT_ENABLE_FALLBACK="True"
PLAYWRIGHT_MAX_EMPTY_RETRIES="1"
USE_PLAYWRIGHT_FOR_EMPTY_CONTENT="True"
# Bucket de Supabase Storage para archivos
SUPABASE_STORAGE_BUCKET=""

# --- MODULE_CONNECTOR ---
# Directorios para transferencia de archivos
SCRAPER_OUTPUT_DIR="/data/scrapy_output/pending"
PIPELINE_PENDING_DIR="/data/pipeline_input/pending"
PIPELINE_COMPLETED_DIR="/data/pipeline_input/completed"
PIPELINE_ERROR_DIR="/data/pipeline_input/error"
# Configuración de polling
POLLING_INTERVAL="5"
MAX_RETRIES="3"
RETRY_BACKOFF="2.0"

# --- MODULE_PIPELINE ---
# Configuración del servidor FastAPI
API_HOST="0.0.0.0"
API_PORT="8003"
# Configuración de procesamiento
WORKER_COUNT="3"
QUEUE_MAX_SIZE="100"
# Configuración de Groq API
MODEL_ID="llama-3.1-8b-instant"
API_TIMEOUT="60"
API_TEMPERATURE="0.1"
API_MAX_TOKENS="4000"
MAX_RETRIES="2"
MAX_WAIT_SECONDS="60"
# Límites de contenido
MIN_CONTENT_LENGTH="100"
MAX_CONTENT_LENGTH="50000"
# Directorios específicos del pipeline
PROMPTS_DIR="./prompts"
METRICS_DIR="./metrics"
LOG_DIR="./logs"
# Configuración avanzada
USE_SPACY_FILTER="false"
STORE_METRICS="true"
IMPORTANCE_DEFAULT="5"
EMBEDDING_MODEL="sentence-transformers/all-MiniLM-L6-v2"
EMBEDDING_DIMENSION="384"
DB_POOL_SIZE="10"
DB_MAX_OVERFLOW="20"
DB_POOL_TIMEOUT="30"
LLM_BATCH_SIZE="1"
LLM_CONCURRENT_REQUESTS="3"
ENABLE_DEV_ENDPOINTS="false"

# --- MODULE_DASHBOARD_REVIEW_BACKEND ---
# Configuración del servidor backend
API_HOST="0.0.0.0"
API_PORT="8004"
# CORS para frontend
CORS_ORIGINS="http://localhost:3001"

# --- MODULE_DASHBOARD_REVIEW_FRONTEND ---
# Variables específicas de Vite (las configuraciones se mantienen en el módulo)
VITE_APP_API_URL="http://localhost:8080/api"
VITE_APP_ENV="development"
VITE_APP_DEBUG="true"

# =============================================================================
# CONFIGURACIÓN OPCIONAL AVANZADA
# =============================================================================
# Prefect (si se usa para orquestación)
PREFECT_API_URL=""               # http://localhost:4200/api o Prefect Cloud
PREFECT_API_KEY=""               # Solo para Prefect Cloud
PREFECT_AGENT_QUEUES="default"

# Monitoreo y alertas
SENTRY_ENABLED="false"
SENTRY_DSN=""
ENABLE_SENTRY="false"            # Para module_connector
ENABLE_DETAILED_LOGGING="false"
ENABLE_NOTIFICATIONS="false"

# =============================================================================
# NOTAS IMPORTANTES
# =============================================================================
# 1. Variables marcadas como REQUERIDAS son obligatorias para el funcionamiento básico
# 2. Los módulos individuales pueden sobrescribir configuraciones específicas
# 3. Para desarrollo local usar DEBUG_MODE=true y LOG_LEVEL=DEBUG
# 4. En producción usar ENVIRONMENT=production y DEBUG_MODE=false
# 5. Cada módulo tiene su propio .env.example para configuraciones específicas
# 6. La configuración global debe ser consistente con cada módulo individual

# =============================================================================
# REFERENCIAS
# =============================================================================
# - Documentación de BD: BaseDeDatos_SUPABASE/GUIA_BD.md
# - Configuración por módulo: src/module_*/README.md
# - Docker compose: docker-compose.yml
