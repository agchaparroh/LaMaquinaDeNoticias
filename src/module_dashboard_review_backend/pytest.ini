[tool:pytest]
# Pytest configuration for Dashboard Review Backend

# Test discovery patterns
testpaths = tests
python_files = test_*.py
python_classes = Test*
python_functions = test_*

# Output options
addopts = 
    --strict-markers
    --tb=short
    --asyncio-mode=auto
    --cov=src
    --cov-report=term-missing
    --cov-report=html
    --cov-fail-under=80
    
# Markers
markers =
    asyncio: marks tests as async (auto-detected by pytest-asyncio)
    integration: marks tests that require external services
    unit: marks unit tests
    slow: marks tests as slow running
    
# Coverage options
[coverage:run]
source = src
omit = 
    */tests/*
    */test_*
    */__pycache__/*
    */venv/*
    */.venv/*

[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    raise AssertionError
    raise NotImplementedError
    if __name__ == .__main__.:
    if TYPE_CHECKING:
    @abstractmethod
    @overload
    \.\.\.\s*$
    pass
    except ImportError:
    except KeyError:
    
precision = 2
show_missing = True
skip_covered = False
skip_empty = True
