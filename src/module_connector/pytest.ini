[tool:pytest]
# Configuración de pytest para module_connector

# Directorio de tests
testpaths = tests

# Patrones de archivos de test
python_files = test_*.py

# Patrones de clases de test
python_classes = Test*

# Patrones de funciones de test
python_functions = test_*

# Opciones adicionales
addopts = 
    --strict-markers
    --tb=short
    --disable-warnings
    
# Marcadores personalizados
markers =
    slow: marks tests as slow (deselect with '-m "not slow"')
    integration: marks tests as integration tests requiring external services
    unit: marks tests as unit tests
    critical: marks tests as critical for basic functionality
    stress: marks tests as stress/load tests
    concurrency: marks tests focusing on concurrent operations
    recovery: marks tests for recovery scenarios

# Configuración de asyncio
asyncio_mode = auto

# Timeout por defecto para tests (en segundos)
timeout = 30
# Timeout mayor para tests de stress/carga
timeout_func_only = true

# Configuración de cobertura
[coverage:run]
source = src
omit = 
    */tests/*
    */test_*
    */__pycache__/*
    
[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    raise AssertionError
    raise NotImplementedError
    if __name__ == .__main__.:
    if TYPE_CHECKING:
