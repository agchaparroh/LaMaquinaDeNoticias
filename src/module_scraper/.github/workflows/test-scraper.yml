name: Tests del MÃ³dulo Scraper

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'src/module_scraper/**'
      - '.github/workflows/test-scraper.yml'
  pull_request:
    branches: [ main, develop ]
    paths:
      - 'src/module_scraper/**'

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        python-version: ['3.10', '3.11']
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Cache pip packages
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    
    - name: Install dependencies
      run: |
        cd src/module_scraper
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest pytest-cov pytest-timeout pytest-asyncio
    
    - name: Install Playwright browsers
      run: |
        playwright install chromium
        playwright install-deps chromium
    
    - name: Run tests with coverage
      env:
        SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
        SUPABASE_KEY: ${{ secrets.SUPABASE_KEY }}
        SUPABASE_SERVICE_ROLE_KEY: ${{ secrets.SUPABASE_SERVICE_ROLE_KEY }}
      run: |
        cd src/module_scraper
        python run_all_tests.py --coverage
    
    - name: Upload coverage reports
      uses: codecov/codecov-action@v3
      with:
        file: ./src/module_scraper/coverage.xml
        fail_ci_if_error: false
        verbose: true
    
    - name: Generate test report
      if: always()
      run: |
        cd src/module_scraper
        pytest tests/ --junit-xml=test-results.xml
    
    - name: Upload test results
      if: always()
      uses: actions/upload-artifact@v3
      with:
        name: test-results-${{ matrix.python-version }}
        path: src/module_scraper/test-results.xml

  validate-spiders:
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
    
    - name: Install dependencies
      run: |
        cd src/module_scraper
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Validate all spiders
      run: |
        cd src/module_scraper
        python tests/test_spiders/run_spider_tests.py --report
