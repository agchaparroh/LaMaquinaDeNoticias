{
  "tasks": [
    {
      "id": 16,
      "title": "FASE 0: Auditoría y Actualización de Documentación Técnica",
      "description": "Revisar y actualizar toda la documentación técnica para corregir inconsistencias, verificar tecnologías obsoletas, y asegurar que la documentación refleje las decisiones técnicas actualizadas antes de comenzar la implementación.",
      "details": "Esta tarea crítica debe completarse antes de cualquier implementación para evitar problemas durante el desarrollo:\n\n1. **Auditoría de Tecnologías Mencionadas:**\n   - Verificar estado actual de todas las librerías mencionadas\n   - Confirmar compatibilidades con versiones modernas\n   - Identificar herramientas obsoletas o discontinuadas\n\n2. **Corrección de Inconsistencias Detectadas:**\n   - Actualizar referencias a Portia con alternativas viables\n   - Revisar versiones de Scrapy, Playwright, Spidermon\n   - Actualizar dependencias y configuraciones\n\n3. **Actualización del Documento module_scraper.md:**\n   - Reemplazar secciones obsoletas\n   - Actualizar arquitectura de contenedores\n   - Corregir flujo de trabajo sin Portia\n\n4. **Verificación de Compatibilidad:**\n   - Scrapy 2.8+ con scrapy-playwright\n   - Spidermon con Scrapy moderno\n   - Todas las dependencias del requirements.txt\n\n5. **Documentación de Alternativas:**\n   - Documentar alternativas a Portia (Scrapely, configuración JSON)\n   - Actualizar arquitectura de un solo contenedor vs dos\n   - Revisar volúmenes compartidos innecesarios",
      "testStrategy": "",
      "status": "done",
      "dependencies": [],
      "priority": "high",
      "subtasks": [
        {
          "id": 1,
          "title": "Auditoría de Tecnologías y Librerías",
          "description": "Verificar el estado actual de todas las tecnologías y librerías mencionadas en la documentación técnica.",
          "dependencies": [],
          "details": "Realizar un inventario completo de todas las tecnologías mencionadas (Scrapy, Playwright, Spidermon, Portia, etc.). Verificar versiones actuales, compatibilidad con sistemas modernos, y estado de mantenimiento. Identificar claramente cuáles están obsoletas o discontinuadas. Crear una tabla comparativa con: nombre de tecnología, versión mencionada en docs, versión actual, estado (mantenida/obsoleta), y recomendación.",
          "status": "done",
          "testStrategy": "Verificar cada tecnología contra sus repositorios oficiales y documentación. Confirmar fechas de últimas actualizaciones y estado de soporte."
        },
        {
          "id": 2,
          "title": "Identificación de Inconsistencias Técnicas",
          "description": "Detectar y documentar todas las inconsistencias técnicas presentes en la documentación actual.",
          "dependencies": [],
          "details": "Revisar sistemáticamente toda la documentación técnica para identificar: referencias cruzadas incorrectas, flujos de trabajo imposibles o ineficientes, configuraciones incompatibles entre componentes, y cualquier otra inconsistencia técnica. Crear un registro detallado de cada inconsistencia encontrada, incluyendo ubicación en la documentación, descripción del problema, y severidad (crítica/alta/media/baja).",
          "status": "done",
          "testStrategy": "Validar cada inconsistencia identificada mediante pruebas de concepto o verificación cruzada con documentación oficial de las tecnologías."
        },
        {
          "id": 3,
          "title": "Actualización de Referencias a Portia",
          "description": "Reemplazar todas las referencias a Portia con alternativas viables y modernas.",
          "dependencies": [],
          "details": "Identificar todas las secciones que mencionan Portia. Investigar y documentar alternativas modernas como Scrapely, configuraciones basadas en JSON, o herramientas de extracción visual más recientes. Reescribir completamente estas secciones con soluciones actualizadas, incluyendo ejemplos de código y configuración para cada alternativa propuesta.",
          "status": "done",
          "testStrategy": "Implementar ejemplos mínimos de cada alternativa propuesta para verificar su viabilidad y documentar resultados."
        },
        {
          "id": 4,
          "title": "Revisión de Arquitectura de Contenedores",
          "description": "Actualizar la documentación de arquitectura de contenedores para reflejar prácticas modernas.",
          "dependencies": [],
          "details": "Revisar la arquitectura de contenedores actual. Evaluar la necesidad de mantener múltiples contenedores vs. un enfoque más simplificado. Actualizar diagramas de arquitectura, configuraciones de Docker y docker-compose. Eliminar referencias a volúmenes compartidos innecesarios. Documentar claramente las ventajas de la nueva arquitectura propuesta.",
          "status": "done",
          "testStrategy": "Crear configuraciones de prueba para validar que la arquitectura propuesta funciona correctamente con las tecnologías actualizadas."
        },
        {
          "id": 5,
          "title": "Actualización del Documento module_scraper.md",
          "description": "Reescribir completamente el documento module_scraper.md para reflejar las tecnologías y arquitecturas actualizadas.",
          "dependencies": [],
          "details": "Reescribir el documento module_scraper.md incorporando todas las actualizaciones previas. Eliminar secciones obsoletas. Actualizar el flujo de trabajo sin Portia. Incluir nuevos diagramas de arquitectura. Asegurar que todas las referencias a tecnologías, versiones y configuraciones estén actualizadas. Mantener un estilo consistente y claro en todo el documento.",
          "status": "done",
          "testStrategy": "Realizar una revisión por pares del documento actualizado para verificar claridad, precisión técnica y completitud."
        },
        {
          "id": 6,
          "title": "Verificación Final de Compatibilidad y Pruebas",
          "description": "Realizar pruebas de compatibilidad entre todas las tecnologías actualizadas y documentar los resultados.",
          "dependencies": [],
          "details": "Crear un entorno de pruebas para verificar la compatibilidad entre Scrapy 2.8+, scrapy-playwright, Spidermon y todas las dependencias listadas en requirements.txt. Documentar cualquier problema de compatibilidad encontrado y sus soluciones. Actualizar el archivo requirements.txt con versiones específicas que garanticen compatibilidad. Crear scripts de ejemplo que demuestren la integración correcta de todos los componentes.",
          "status": "done",
          "testStrategy": "Ejecutar scripts de prueba en un entorno limpio para verificar que todas las tecnologías funcionan correctamente juntas. Documentar cualquier error y su resolución."
        }
      ]
    },
    {
      "id": 19,
      "title": "Supabase: Configuración y Finalización de Base de Datos",
      "description": "Asegurar que la configuración de Supabase esté completa, incluyendo esquemas, tablas, vistas materializadas y funciones/triggers necesarios para el proyecto. Cubre lo indicado como 'Supabase _ base de datos _ COMPLETADO'.",
      "details": "",
      "testStrategy": "",
      "status": "done",
      "dependencies": [],
      "priority": "high",
      "subtasks": []
    },
    {
      "id": 21,
      "title": "Desarrollar Conector Scrapy-Pipeline (module_connector)",
      "description": "Implementar el conector que transfiere los datos desde el `module_scraper` hacia el `module_ingestion_engine`.",
      "details": "",
      "testStrategy": "",
      "status": "pending",
      "dependencies": [],
      "priority": "high",
      "subtasks": []
    },
    {
      "id": 22,
      "title": "Desarrollar Motor de Ingesta y Segmentación (module_ingestion_engine)",
      "description": "Implementar el motor para la ingesta de datos crudos (provenientes del conector) y su segmentación en unidades manejables (hechos, citas, etc.).",
      "details": "",
      "testStrategy": "",
      "status": "pending",
      "dependencies": [
        "19",
        "21"
      ],
      "priority": "high",
      "subtasks": []
    },
    {
      "id": 23,
      "title": "Desarrollar Pipeline de Procesamiento (module_pipeline)",
      "description": "Implementar el pipeline principal para el procesamiento de datos segmentados, aplicando LLMs para extracción de información y evaluación de importancia.",
      "details": "",
      "testStrategy": "",
      "status": "pending",
      "dependencies": [
        "19",
        "22"
      ],
      "priority": "high",
      "subtasks": []
    },
    {
      "id": 24,
      "title": "Desarrollar Lógica de Mantenimiento (module_maintenance_scripts)",
      "description": "Implementar los scripts de mantenimiento para tareas automatizadas ('IA Nocturna') como generación de embeddings, actualización de Hilos Narrativos, etc.",
      "details": "",
      "testStrategy": "",
      "status": "pending",
      "dependencies": [
        "19",
        "23"
      ],
      "priority": "high",
      "subtasks": []
    },
    {
      "id": 25,
      "title": "Configurar Orquestación - Prefect (module_orchestration)",
      "description": "Configurar y desplegar Prefect para orquestar los flujos de trabajo del sistema, especialmente los scripts de mantenimiento y el pipeline de datos.",
      "details": "",
      "testStrategy": "",
      "status": "pending",
      "dependencies": [
        "24"
      ],
      "priority": "high",
      "subtasks": []
    },
    {
      "id": 26,
      "title": "Desarrollar Dashboard de Revisión (module_dashboard_review)",
      "description": "Implementar la interfaz de usuario para que periodistas y editores revisen, validen y curen el contenido extraído, gestionen Hilos Narrativos y proporcionen feedback.",
      "details": "",
      "testStrategy": "",
      "status": "pending",
      "dependencies": [
        "19",
        "23"
      ],
      "priority": "medium",
      "subtasks": []
    },
    {
      "id": 27,
      "title": "Desarrollar Chat de Investigación (module_chat_interface)",
      "description": "Implementar la interfaz de chat que permita a los usuarios interactuar con el LLM y las Query Tools para investigar la información almacenada.",
      "details": "",
      "testStrategy": "",
      "status": "pending",
      "dependencies": [
        "19",
        "23",
        "24"
      ],
      "priority": "medium",
      "subtasks": []
    },
    {
      "id": 28,
      "title": "Desarrollar Interfaz de Desarrollador (module_dev_interface)",
      "description": "Implementar una interfaz para desarrolladores que facilite la gestión, monitorización y depuración del sistema.",
      "details": "",
      "testStrategy": "",
      "status": "pending",
      "dependencies": [
        "23"
      ],
      "priority": "low",
      "subtasks": []
    }
  ]
}